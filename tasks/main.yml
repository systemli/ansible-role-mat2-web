---

- name: install mat2
  apt:
    name: mat2
    install_recommends: False
    state: present

- name: install mat2-web dependencies
  apt:
    name:
      - bubblewrap
      - cron
      - cryptsetup
      - ffmpeg
      - git
      - python3-blinker
      - python3-cerberus
      - python3-flasgger
      - python3-flask
      - python3-flask-cors
      - python3-flask-restful
      - python3-mutagen
      - python3-pip
      - uwsgi
      - uwsgi-plugin-python3
    install_recommends: False
    state: present

- name: Install pyyaml pip package
  pip:
    name: pyyaml
    version: 5.4.1
    executable: pip3

- name: create directory /var/www
  file:
    path: /var/www
    state: directory
    owner: root
    group: root
    mode: 0755

- name: create mat2-web user
  user:
    name: "{{ mat2_web_user }}"
    home: "{{ mat2_web_home }}"
    shell: /bin/false

- name: get mat2-web git repository
  git:
    repo: https://0xacab.org/jvoisin/mat2-web.git
    dest: "{{ mat2_web_docroot }}"
    update: "{{ mat2_web_git_update }}"
  become: True
  become_user: "{{ mat2_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  notify:
    - restart mat2-web

- name: create upload directory
  file:
    path: "{{ mat2_web_docroot }}/uploads"
    state: directory
    owner: "{{ mat2_web_user }}"
    group: "{{ mat2_web_group }}"
    mode: 0750

- block:

    - name: create empty file for dm-crypt volume for upload data
      command: "dd if=/dev/zero of={{ mat2_web_upload_dmcrypt_volume }} bs=1M count={{ mat2_web_upload_dmcrypt_volume_size }}"
      args:
        creates: "{{ mat2_web_upload_dmcrypt_volume }}"

    - name: configure dm-crypt volume for upload data with random key in crypttab
      crypttab:
        name: "{{ mat2_web_upload_dmcrypt_target }}"
        backing_device: "{{ mat2_web_upload_dmcrypt_volume }}"
        opts: cipher=aes-cbc-essiv:sha256,hash=plain,discard,tmp
        password: /dev/urandom
        state: present

    - name: open dm-crypt volume for upload data
      command: cryptdisks_start {{ mat2_web_upload_dmcrypt_target }}
      args:
        creates: "/dev/mapper/{{ mat2_web_upload_dmcrypt_target }}"

    - name: configure mountpoint for dm-crypt volume for upload data
      mount:
        path: "{{ mat2_web_docroot }}/uploads"
        src: "/dev/mapper/{{ mat2_web_upload_dmcrypt_target }}"
        fstype: ext4
        opts: nosuid,nodev,noexec
        state: mounted

    - name: set owner for filesystem on dm-crypt volume
      file:
        path: "{{ mat2_web_docroot }}/uploads"
        state: directory
        recurse: True
        owner: "{{ mat2_web_user }}"
        group: "{{ mat2_web_group }}"

  when:
    - mat2_web_upload_dmcrypt
    - not __testing|default()

- name: install mat2-web uWSGI config file
  template:
    src: mat2-web.ini.j2
    dest: "{{ mat2_web_home }}/mat2-web.ini"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart mat2-web

- name: install systemd service unit file for mat2-web uWSGI service
  template:
    src: mat2-web.service.j2
    dest: /etc/systemd/system/mat2-web.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart mat2-web

- name: enable mat2-web uWSGI service
  service:
    name: mat2-web
    enabled: True

- name: create custom template directory
  file:
    path: "{{ mat2_web_docroot }}/custom_templates"
    state: directory
    owner: "{{ mat2_web_user }}"
    group: "{{ mat2_web_group }}"
    mode: 0755
  when: mat2_web_custom_templates

- name: install custom template files
  copy:
    src: "{{ item }}"
    dest: "{{ mat2_web_docroot }}/custom_templates/"
    owner: "{{ mat2_web_user }}"
    group: "{{ mat2_web_group }}"
    mode: 0644
  with_fileglob: "mat2-web/custom_templates/*"
  when: mat2_web_custom_templates
  notify:
    - reload systemd

- name: install custom config file
  template:
    src: config.py.j2
    dest: "{{ mat2_web_docroot }}/config.py"
    owner: "{{ mat2_web_user }}"
    group: "{{ mat2_web_group }}"
    mode: 0644
  notify:
    - restart mat2-web

- name: install garbage collector cronjob
  cron:
    name: "Remove stale mat2-web files that got uploaded but never downloaded"
    job: 'find {{ mat2_web_docroot }}/uploads/ -type f -mmin +5 -exec rm {} \;'
    minute: "*/2"
    user: "{{ mat2_web_user }}"
    cron_file: mat2-web

- include: monit.yml
  when: mat2_web_monit_enabled
